# -*- coding: utf-8 -*-
"""data_processing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gMbaejNXFM3IKupkfn8RpCwzttq_-Ks9
"""

import pandas as pd
import numpy as np

def load_data(file_path):
    """Load dataset from CSV file."""
    print(f"Loading data from {file_path}...")
    df = pd.read_csv(file_path)
    print(f"Data loaded successfully. Shape: {df.shape}")
    return df

def handle_missing_values(df):
    """Handle missing values in the DataFrame."""
    print("Handling missing values in the dataset...")
    numeric_cols = df.select_dtypes(include=['number']).columns
    print(f"Filling missing values for numeric columns: {list(numeric_cols)}")
    df[numeric_cols] = df[numeric_cols].fillna(df[numeric_cols].mean())
    print("Missing values handled.")
    return df

def encode_categorical(df, categorical_features):
    """One-Hot Encoding for categorical features."""
    print(f"Performing One-Hot Encoding for categorical features: {categorical_features}")
    df_encoded = pd.get_dummies(df[categorical_features], drop_first=True)
    print("Encoding completed.")
    return df_encoded

def select_features(df, numerical_features, categorical_features):
    """Select features and perform encoding on categorical features."""
    print("Selecting features and encoding categorical features...")
    
    # Ensure numerical and categorical columns exist in the DataFrame
    if not set(numerical_features).issubset(df.columns):
        missing_columns = set(numerical_features) - set(df.columns)
        raise ValueError(f"Missing numerical columns in the DataFrame: {missing_columns}")
    
    if not set(categorical_features).issubset(df.columns):
        missing_columns = set(categorical_features) - set(df.columns)
        raise ValueError(f"Missing categorical columns in the DataFrame: {missing_columns}")
    
    # Select both numerical and categorical features together
    print(f"Selecting numerical features: {numerical_features} and categorical features: {categorical_features}")
    X = df[numerical_features + categorical_features]
    
    # Apply one-hot encoding for categorical features
    if categorical_features:
        print("Applying one-hot encoding for categorical features...")
        X = pd.get_dummies(X, columns=categorical_features, drop_first=False)
    
    print("Feature selection and encoding completed.")
    return X
